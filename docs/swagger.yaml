basePath: /api
definitions:
  models.Items:
    properties:
      description:
        type: string
      itemCode:
        type: string
      itemId:
        type: integer
      orderId:
        type: integer
      quantity:
        type: integer
    type: object
  models.Orders:
    properties:
      customerName:
        type: string
      items:
        items:
          $ref: '#/definitions/models.Items'
        type: array
      orderId:
        type: integer
      orderedAt:
        type: string
    type: object
  request.CreateItemRequest:
    properties:
      description:
        type: string
      itemCode:
        type: string
      quantity:
        type: integer
    required:
    - description
    - itemCode
    - quantity
    type: object
  request.CreateOrderRequest:
    properties:
      customerName:
        type: string
      items:
        items:
          $ref: '#/definitions/request.CreateItemRequest'
        type: array
    required:
    - customerName
    - items
    type: object
  request.UpdateItemRequest:
    properties:
      description:
        type: string
      itemCode:
        type: string
      lineItemId:
        type: integer
      quantity:
        type: integer
    required:
    - description
    - itemCode
    - lineItemId
    - quantity
    type: object
  request.UpdateOrderRequest:
    properties:
      customerName:
        type: string
      items:
        items:
          $ref: '#/definitions/request.UpdateItemRequest'
        type: array
      orderedAt:
        type: string
    required:
    - customerName
    - items
    type: object
  response.ErrorResponse:
    properties:
      error:
        type: string
      message:
        type: string
      status:
        type: string
    type: object
  response.WebResponse:
    properties:
      data: {}
      message:
        type: string
      status:
        type: string
    type: object
host: localhost:5000
info:
  contact: {}
  description: Sample service for orders
  title: Orders API
  version: "1.0"
paths:
  /orders:
    get:
      consumes:
      - application/json
      description: Get all orders
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Orders'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get all orders
      tags:
      - Orders
    post:
      consumes:
      - application/json
      description: Create new orders
      parameters:
      - description: Request Body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.CreateOrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Orders'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Create new order
      tags:
      - Orders
  /orders/{id}:
    delete:
      consumes:
      - application/json
      description: Delete order
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.WebResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Delete order
      tags:
      - Orders
    put:
      consumes:
      - application/json
      description: Update orders
      parameters:
      - description: Id
        in: path
        name: id
        required: true
        type: integer
      - description: Request Body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.UpdateOrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Orders'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Update order
      tags:
      - Orders
swagger: "2.0"
